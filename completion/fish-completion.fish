function __fish_fdroid_package
    set files metadata/*.yml
    string replace -r 'metadata/(.*)\.yml' '$1' $files
end

function __fish_fdroid_apk_package
    set files "$argv[1]"/*_*.apk
    string replace -r '.*/(.*)_.*\.apk' '$1' $files
end

function __fish_fdroid_apk_files
    set files **.apk
    printf %s\n $files
end

function __fish_fdroid_scanner
    __fish_fdroid_package
    __fish_fdroid_apk_files
end

complete -c fdroid -n '__fish_use_subcommand' -f -a 'build' -d 'Build a package from source'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'init' -d 'Quickly start a new repository'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'publish' -d 'Sign and place packages in the repo'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'gpgsign' -d 'Add PGP signatures using GnuPG for packages in repo'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'update' -d 'Update repo information for new packages'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'deploy' -d 'Interact with the repo HTTP server'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'verify' -d 'Verify the integrity of downloaded packages'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'checkupdates' -d 'Check for updates to applications'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'import' -d 'Extract application metadata from a source repository'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'install' -d 'Install built packages on devices'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'readmeta' -d 'Read all the metadata files and exit'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'rewritemeta' -d 'Rewrite all the metadata files'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'lint' -d 'Warn about possible metadata errors'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'scanner' -d 'Scan the source code of a package'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'signindex' -d 'Sign indexes created using update --nosign'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'btlog' -d 'Update the binary transparency log for a URL'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'signatures' -d 'Extract signatures from APKs'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'nightly' -d 'Set up an app build for a nightly build repo'
complete -c fdroid -n '__fish_use_subcommand' -f -a 'mirror' -d 'Download complete mirrors of small repos'
complete -c fdroid -n '__fish_seen_subcommand_from btlog' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from btlog' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from btlog' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from btlog' -l git-repo -d 'Path to the git repo to use as the log'
complete -c fdroid -n '__fish_seen_subcommand_from btlog' -s u -l url -d 'The base URL for the repo to log (default: https://f-droid.org)'
complete -c fdroid -n '__fish_seen_subcommand_from btlog' -l git-remote -d 'Push the log to this git remote repository'
complete -c fdroid -n '__fish_seen_subcommand_from build' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from build' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from build' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from build' -f -k -a '(__fish_fdroid_package)'
complete -c fdroid -n '__fish_seen_subcommand_from build' -s l -l latest -d 'Build only the latest version of each package'
complete -c fdroid -n '__fish_seen_subcommand_from build' -s s -l stop -d 'Make the build stop on exceptions'
complete -c fdroid -n '__fish_seen_subcommand_from build' -s t -l test -d 'Test mode - put output in the tmp directory only, and always build, even if the output already exists.'
complete -c fdroid -n '__fish_seen_subcommand_from build' -l server -d 'Use build server'
complete -c fdroid -n '__fish_seen_subcommand_from build' -l reset-server -d 'Reset and create a brand new build server, even if the existing one appears to be ok.'
complete -c fdroid -n '__fish_seen_subcommand_from build' -l skip-scan -d 'Skip scanning the source code for binaries and other problems'
complete -c fdroid -n '__fish_seen_subcommand_from build' -l scan-binary -d 'Scan the resulting APK(s) for known non-free classes.'
complete -c fdroid -n '__fish_seen_subcommand_from build' -l no-tarball -d 'Don\'t create a source tarball, useful when testing a build'
complete -c fdroid -n '__fish_seen_subcommand_from build' -l no-refresh -d 'Don\'t refresh the repository, useful when testing a build with no internet connection'
complete -c fdroid -n '__fish_seen_subcommand_from build' -s f -l force -d 'Force build of disabled apps, and carries on regardless of scan problems. Only allowed in test mode.'
complete -c fdroid -n '__fish_seen_subcommand_from build' -s a -l all -d 'Build all applications available'
complete -c fdroid -n '__fish_seen_subcommand_from build' -s W -d 'Force metadata errors (default) to be warnings, or to be ignored.'
complete -c fdroid -n '__fish_seen_subcommand_from checkupdates' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from checkupdates' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from checkupdates' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from checkupdates' -f -k -a '(__fish_fdroid_package)'
complete -c fdroid -n '__fish_seen_subcommand_from checkupdates' -l auto -d 'Process auto-updates'
complete -c fdroid -n '__fish_seen_subcommand_from checkupdates' -l autoonly -d 'Only process apps with auto-updates'
complete -c fdroid -n '__fish_seen_subcommand_from checkupdates' -l commit -d 'Commit changes'
complete -c fdroid -n '__fish_seen_subcommand_from checkupdates' -l allow-dirty -d 'Run on git repo that has uncommitted changes'
complete -c fdroid -n '__fish_seen_subcommand_from checkupdates' -s W -d 'Force metadata errors (default) to be warnings, or to be ignored.'
complete -c fdroid -n '__fish_seen_subcommand_from deploy' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from deploy' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from deploy' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from deploy' -s i -l identity-file -d 'Specify an identity file to provide to SSH for rsyncing'
complete -c fdroid -n '__fish_seen_subcommand_from deploy' -l local-copy-dir -d 'Specify a local folder to sync the repo to'
complete -c fdroid -n '__fish_seen_subcommand_from deploy' -l no-checksum -d 'Don\'t use rsync checksums'
complete -c fdroid -n '__fish_seen_subcommand_from deploy' -l no-keep-git-mirror-archive -d 'If a git mirror gets to big, allow the archive to be deleted'
complete -c fdroid -n '__fish_seen_subcommand_from gpgsign' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from gpgsign' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from gpgsign' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from import' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from import' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from import' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from import' -s u -l url -d 'Project URL to import from.'
complete -c fdroid -n '__fish_seen_subcommand_from import' -s s -l subdir -d 'Path to main Android project subdirectory, if not in root.'
complete -c fdroid -n '__fish_seen_subcommand_from import' -s c -l categories -d 'Comma separated list of categories.'
complete -c fdroid -n '__fish_seen_subcommand_from import' -s l -l license -d 'Overall license of the project.'
complete -c fdroid -n '__fish_seen_subcommand_from import' -l omit-disable -d 'Do not add \'disable:\' to the generated build entries'
complete -c fdroid -n '__fish_seen_subcommand_from import' -l rev -d 'Allows a different revision (or git branch) to be specified for the initial import'
complete -c fdroid -n '__fish_seen_subcommand_from import' -s W -d 'Force metadata errors (default) to be warnings, or to be ignored.'
complete -c fdroid -n '__fish_seen_subcommand_from init' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from init' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from init' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from init' -s d -l distinguished-name -d 'X.509 \'Distinguished Name\' used when generating keys'
complete -c fdroid -n '__fish_seen_subcommand_from init' -l keystore -d 'Path to the keystore for the repo signing key'
complete -c fdroid -n '__fish_seen_subcommand_from init' -l repo-keyalias -d 'Alias of the repo signing key in the keystore'
complete -c fdroid -n '__fish_seen_subcommand_from init' -l android-home -d 'Path to the Android SDK (sometimes set in ANDROID_HOME)'
complete -c fdroid -n '__fish_seen_subcommand_from init' -l no-prompt -d 'Do not prompt for Android SDK path, just fail'
complete -c fdroid -n '__fish_seen_subcommand_from install' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from install' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from install' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from install' -f -k -a '(__fish_fdroid_apk_package repo)'
complete -c fdroid -n '__fish_seen_subcommand_from install' -s a -l all -d 'Install all signed applications available'
complete -c fdroid -n '__fish_seen_subcommand_from lint' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from lint' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from lint' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from lint' -s f -l format -d 'Also warn about formatting issues, like rewritemeta -l'
complete -c fdroid -n '__fish_seen_subcommand_from lint' -l force-yamllint -d 'When linting the entire repository yamllint is disabled by default. This option forces yamllint regardless.'
complete -c fdroid -n '__fish_seen_subcommand_from lint' -f -k -a '(__fish_fdroid_package)'
complete -c fdroid -n '__fish_seen_subcommand_from lint' -s W -d 'Force metadata errors (default) to be warnings, or to be ignored.'
complete -c fdroid -n '__fish_seen_subcommand_from mirror' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from mirror' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from mirror' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from mirror' -f
complete -c fdroid -n '__fish_seen_subcommand_from mirror' -l all -d 'Mirror the full repo and archive, all file types.'
complete -c fdroid -n '__fish_seen_subcommand_from mirror' -l archive -d 'Also mirror the full archive section'
complete -c fdroid -n '__fish_seen_subcommand_from mirror' -l build-logs -d 'Include the build logs in the mirror'
complete -c fdroid -n '__fish_seen_subcommand_from mirror' -l pgp-signatures -d 'Include the PGP signature .asc files in the mirror'
complete -c fdroid -n '__fish_seen_subcommand_from mirror' -l src-tarballs -d 'Include the source tarballs in the mirror'
complete -c fdroid -n '__fish_seen_subcommand_from mirror' -l output-dir -d 'The directory to write the mirror to'
complete -c fdroid -n '__fish_seen_subcommand_from nightly' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from nightly' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from nightly' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from nightly' -l keystore -d 'Specify which debug keystore file to use.'
complete -c fdroid -n '__fish_seen_subcommand_from nightly' -l show-secret-var -d 'Print the secret variable to the terminal for easy copy/paste'
complete -c fdroid -n '__fish_seen_subcommand_from nightly' -l keep-private-keys -d 'Do not remove the private keys generated from the keystore'
complete -c fdroid -n '__fish_seen_subcommand_from nightly' -l no-deploy -d 'Do not deploy the new files to the repo'
complete -c fdroid -n '__fish_seen_subcommand_from nightly' -l file -d 'The file to be included in the repo (path or glob)'
complete -c fdroid -n '__fish_seen_subcommand_from nightly' -l no-checksum -d 'Don\'t use rsync checksums'
complete -c fdroid -n '__fish_seen_subcommand_from nightly' -l archive-older -d 'Set maximum releases in repo before older ones are archived'
complete -c fdroid -n '__fish_seen_subcommand_from publish' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from publish' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from publish' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from publish' -f -k -a '(__fish_fdroid_apk_package unsigned)'
complete -c fdroid -n '__fish_seen_subcommand_from publish' -s W -d 'Force metadata errors (default) to be warnings, or to be ignored.'
complete -c fdroid -n '__fish_seen_subcommand_from readmeta' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from readmeta' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from readmeta' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from readmeta' -s W -d 'Force metadata errors (default) to be warnings, or to be ignored.'
complete -c fdroid -n '__fish_seen_subcommand_from rewritemeta' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from rewritemeta' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from rewritemeta' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from rewritemeta' -s l -l list -d 'List files that would be reformatted (dry run)'
complete -c fdroid -n '__fish_seen_subcommand_from rewritemeta' -f -k -a '(__fish_fdroid_package)'
complete -c fdroid -n '__fish_seen_subcommand_from rewritemeta' -s W -d 'Force metadata errors (default) to be warnings, or to be ignored.'
complete -c fdroid -n '__fish_seen_subcommand_from scanner' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from scanner' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from scanner' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from scanner' -f -k -a '(__fish_fdroid_scanner)'
complete -c fdroid -n '__fish_seen_subcommand_from scanner' -s f -l force -d 'Force scan of disabled apps and builds.'
complete -c fdroid -n '__fish_seen_subcommand_from scanner' -l json -d 'Output JSON to stdout.'
complete -c fdroid -n '__fish_seen_subcommand_from scanner' -s r -l refresh -d 'Fetch the latest version of signatures from the web'
complete -c fdroid -n '__fish_seen_subcommand_from scanner' -s e -l exit-code -d 'Exit with a non-zero code if problems were found'
complete -c fdroid -n '__fish_seen_subcommand_from scanner' -s W -d 'Force metadata errors (default) to be warnings, or to be ignored.'
complete -c fdroid -n '__fish_seen_subcommand_from signatures' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from signatures' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from signatures' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from signatures' -f -k -a '(__fish_fdroid_apk_files)'
complete -c fdroid -n '__fish_seen_subcommand_from signatures' -l no-check-https
complete -c fdroid -n '__fish_seen_subcommand_from signindex' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from signindex' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from signindex' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from update' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from update' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from update' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from update' -l create-key -d 'Add a repo signing key to an unsigned repo'
complete -c fdroid -n '__fish_seen_subcommand_from update' -s c -l create-metadata -d 'Add skeleton metadata files for APKs that are missing them'
complete -c fdroid -n '__fish_seen_subcommand_from update' -l delete-unknown -d 'Delete APKs and/or OBBs without metadata from the repo'
complete -c fdroid -n '__fish_seen_subcommand_from update' -s I -l icons -d 'Resize all the icons exceeding the max pixel size and exit'
complete -c fdroid -n '__fish_seen_subcommand_from update' -l pretty -d 'Produce human-readable XML/JSON for index files'
complete -c fdroid -n '__fish_seen_subcommand_from update' -l clean -d 'Clean update - don\'t uses caches, reprocess all APKs'
complete -c fdroid -n '__fish_seen_subcommand_from update' -l nosign -d 'When configured for signed indexes, create only unsigned indexes at this stage'
complete -c fdroid -n '__fish_seen_subcommand_from update' -l use-date-from-apk -d 'Use date from APK instead of current time for newly added APKs'
complete -c fdroid -n '__fish_seen_subcommand_from update' -l rename-apks -d 'Rename APK files that do not match package.name_123.apk'
complete -c fdroid -n '__fish_seen_subcommand_from update' -l allow-disabled-algorithms -d 'Include APKs that are signed with disabled algorithms like MD5'
complete -c fdroid -n '__fish_seen_subcommand_from update' -s W -d 'Force metadata errors (default) to be warnings, or to be ignored.'
complete -c fdroid -n '__fish_seen_subcommand_from verify' -s h -l help -d 'Show this help message and exit'
complete -c fdroid -n '__fish_seen_subcommand_from verify' -s v -l verbose -d 'Spew out even more information than normal'
complete -c fdroid -n '__fish_seen_subcommand_from verify' -s q -l quiet -d 'Restrict output to warnings and errors'
complete -c fdroid -n '__fish_seen_subcommand_from verify' -f -k -a '(__fish_fdroid_package)'
complete -c fdroid -n '__fish_seen_subcommand_from verify' -l reuse-remote-apk -d 'Verify against locally cached copy rather than redownloading.'
complete -c fdroid -n '__fish_seen_subcommand_from verify' -l output-json -d 'Output JSON report to file named after APK.'
