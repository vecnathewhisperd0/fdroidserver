#!/usr/bin/env python3

import json
import unittest
import sys  # Boilerplate dependency
import importlib
from optparse import OptionParser  # Boilerplate dependency
from pathlib import Path  # Boilerplate dependency

try:
    import jsonschema
except ImportError:
    pass


# Boilerplate code
localmodule = Path(__file__).resolve().parent.parent
print('localmodule: ' + str(localmodule))
if localmodule not in sys.path:
    sys.path.insert(0, str(localmodule))

import fdroidserver.schemas


class SchemasTest(unittest.TestCase):
    @unittest.skipUnless(
        importlib.util.find_spec('jsonschema'),
        'jsonschema might not be installed, e.g. on Buildserver',
    )
    def test_schemas_are_valid(self):
        for name in ('metadata',):
            schema = json.loads(
                importlib.resources.read_text(fdroidserver.schemas, f'{name}.json')
            )
            jsonschema.validators.validator_for(schema).check_schema(schema)


# Boilerplate code
if __name__ == "__main__":
    parser = OptionParser()
    parser.add_option(
        "-v",
        "--verbose",
        action="store_true",
        default=False,
        help="Spew out even more information than normal",
    )
    (fdroidserver.common.options, args) = parser.parse_args(['--verbose'])

    newSuite = unittest.TestSuite()
    newSuite.addTest(unittest.makeSuite(SchemasTest))
    unittest.main(failfast=True)
